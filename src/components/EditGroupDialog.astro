---
const HEAD_ELEMENTS = [
  "Date",
  "Type",
  "Description",
  "Amount",
  "Balance",
  "Actions",
];
---

<dialog
  id="edit-group-dialog"
  class="absolute backdrop:bg-black/70 backdrop:backdrop-blur-sm rounded-2xl bg-white"
>
  <div class="relative text-black py-12 px-24">
    <h1 class="font-bold font-display text-[64px]">Loading...</h1>
    <div class="mt-8 mb-4">
      <h4 class="font-display font-bold text-xl">Transactions:</h4>
    </div>
    <table id="edit-group-table" class="text-left text-black">
      <thead class="font-bold font-display text-xl uppercase">
        <tr>
          {
            HEAD_ELEMENTS.map((element) => (
              <th scope="col" class="px-4 py-4">
                {element}
              </th>
            ))
          }
        </tr>
      </thead>
      <tbody class="font-body text-xl"> </tbody>
    </table>
    <button
      id="edit-group-close-button"
      type="button"
      class="w-full py-2 bg-black/10 rounded-lg font-bold font-display text-[26px] mt-4 hover:opacity-75"
      >Close</button
    >
  </div>
</dialog>

<script>
  import type { DefaultResponse } from "../controllers/userController";
  import { deleteTransaction } from "./../controllers/groupController";
  const $cardDialog = document.getElementById(
    "edit-group-dialog"
  ) as HTMLDialogElement;
  const $closeButton = document.getElementById("edit-group-close-button");
  const $deleteTransactionForms = document.getElementsByClassName(
    "delete-transaction-form"
  );

  $closeButton!.addEventListener("click", () => $cardDialog.close());
  for (let form of $deleteTransactionForms) {
    form.addEventListener("submit", async (evt) => {
      evt.preventDefault();

      const isOk = confirm("Are you sure to delete this transanction?");
      if (isOk) {
        const data = new FormData(evt.target);
        const transactionId = data.get("transactionId");
        const groupId = data.get("groupId");
        const token = data.get("token");
        const response = await deleteTransaction(
          token || "",
          groupId,
          transactionId
        );
        const decoded = (await response.json()) as DefaultResponse;
        console.log(window.location);

        if (decoded.status === 401) {
          console.log(window.location);
          //window.location.assign(
        }

        if (decoded.message === "error") {
          console.error(decoded.data);
        }

        if (decoded.message === "success") {
          //TODO: delte from array
          console.error(decoded.data);
        }
      }
    });
  }
</script>
