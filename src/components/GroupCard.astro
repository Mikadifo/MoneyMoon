---
import AddGroupDialog from "./AddGroupDialog.astro";
import EditGroupDialog from "./EditGroupDialog.astro";
import type { Group } from "../models/group";

interface Props {
  group?: Group;
  isNew?: boolean;
}

const { group, isNew } = Astro.props;
---

<>
  <AddGroupDialog />
  <EditGroupDialog group={group} />
  <button
    type="button"
    id={isNew ? "new-group-button" : ""}
    class={`${isNew ? "" : "group-card-button"} transition ease-in-out duration-300 bg-black text-white rounded-2xl cursor-default flex items-center hover:cursor-pointer hover:scale-110`}
  >
    {
      isNew ? (
        <span class="font-display font-bold text-6xl px-16 py-12">+</span>
      ) : (
        <div class="flex flex-col px-16 py-8 items-center">
          <span class="font-display font-bold text-4xl mb-4">
            $ {group?.total || 0}
          </span>
          <span class="font-body text-xl">{group?.name}</span>
        </div>
      )
    }
  </button>
</>

<script>
  const $addGroupDialog = document.getElementById(
    "group-dialog"
  ) as HTMLDialogElement;
  const $editGroupDialog = document.getElementById(
    "edit-group-dialog"
  ) as HTMLDialogElement;
  const $newGroupButton = document.getElementById("new-group-button");
  const $editGroupButtons =
    document.getElementsByClassName("group-card-button");

  $newGroupButton?.addEventListener("click", () => $addGroupDialog.showModal());
  for (let button of $editGroupButtons) {
    button.addEventListener("click", () => $editGroupDialog.showModal());
  }
</script>
